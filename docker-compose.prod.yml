services:
  db:
    image: postgres:16
    container_name: gamer-challenges-db
    restart: always
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - gamerchallenge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DATABASE}"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: gamer-challenges-api:prod
    container_name: gamer-challenges-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PGHOST: db
      PGPORT: ${PG_PORT}
      PGUSER: ${PG_USER}
      PGPASSWORD: ${PG_PASSWORD}
      PGDATABASE: ${PG_DATABASE}
      PORT: 5000
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - gamerchallenge-network

volumes:
  db_data:

networks:
  gamerchallenge-network:
    external: true
